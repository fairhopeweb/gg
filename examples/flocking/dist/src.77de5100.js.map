{"version":3,"sources":["../node_modules/stats.js/build/stats.min.js","../../../src/ecs/Component.ts","../../../src/ecs/Entity.ts","../../../src/ecs/Archetype.ts","../../../src/ecs/EntityPool.ts","../../../src/ecs/EntityManager.ts","../../../src/ecs/System.ts","../../../src/ecs/World.ts","../../../src/ecs/index.ts","RenderingContext.ts","archetypes/BirdsArchetype.ts","archetypes/index.ts","components/AccelerationComponent.ts","components/PositionComponent.ts","components/VelocityComponent.ts","components/index.ts","lib/vec2/index.ts","assemblages/BirdAssemblage.ts","systems/FlockingSystem.ts","systems/RenderSystem.ts","index.ts","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.77de5100.js","sourceRoot":"../src","sourcesContent":["// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n","import Entity from './Entity'\n\nconst ComponentTypeRegExp = /Component$/\nexport const getComponentTypeFromClass = (klass: any): string =>\n  klass.name.charAt(0).toLowerCase() +\n  klass.name.slice(1).replace(ComponentTypeRegExp, '')\n\nexport default abstract class Component<T extends any> {\n  readonly type: string = getComponentTypeFromClass(this.constructor)\n\n  constructor(public value: T) {}\n\n  onAttach(entity: Entity<any>) {\n    // stub\n  }\n\n  onDetach(entity: Entity<any>) {\n    // stub\n  }\n}\n\nexport interface ComponentTypes {\n  [key: string]: Component<any>\n}\n","import Component, {\n  ComponentTypes,\n  getComponentTypeFromClass\n} from './Component'\n\ntype ValueOf<T> = T[keyof T]\n\n// type ComponentValues<T extends ComponentTypes> = {\n//   [type in keyof T]: T[type]['value']\n// }\n\ntype EntityChangeEventTypes = 'add' | 'remove'\n\ninterface EntityChangeEvent<C extends ComponentTypes> {\n  type: EntityChangeEventTypes\n  entity: Entity<C>\n  component: C[keyof C]\n}\n\nexport type EntityChangeListener<C extends ComponentTypes> = (\n  ev: EntityChangeEvent<C>\n) => void\n\nlet instanceIdx = 0\n\nexport default class Entity<C extends ComponentTypes> {\n  id: number\n  components: Partial<C> = {}\n\n  get componentTypes(): (keyof C)[] {\n    return Object.keys(this.components)\n  }\n\n  private onChangeListeners: Set<EntityChangeListener<C>> = new Set()\n\n  constructor(components: ValueOf<C>[] = []) {\n    this.reset()\n    this.renew(components)\n  }\n\n  renew(components: ValueOf<C>[] = []): Entity<C> {\n    components.forEach(this.addComponent)\n    return this\n  }\n\n  reset(): Entity<C> {\n    this.componentTypes.reverse().forEach(this.removeComponent)\n    this.id = ++instanceIdx\n    this.onChangeListeners = new Set()\n    return this\n  }\n\n  onChange(listener: EntityChangeListener<C>) {\n    this.onChangeListeners.add(listener)\n    return () => this.onChangeListeners.delete(listener)\n  }\n\n  hasComponent(type: keyof C): boolean {\n    return !!this.components[type]\n  }\n\n  // tslint:disable-next-line\n  has = this.hasComponent\n\n  hasComponents = (...types: (keyof C)[]): boolean => {\n    return types.every(type => this.hasComponent(type))\n  }\n\n  addComponent = (component: ValueOf<C>) => {\n    if (!this.hasComponent(component.type)) {\n      this.components[component.type as keyof C] = component\n\n      component.onAttach(this)\n\n      this.onChangeListeners.forEach(listener =>\n        listener({ type: 'add', entity: this, component })\n      )\n    } else {\n      throw new Error(\n        `Entity already contains component of type ${component.type}.`\n      )\n    }\n  }\n\n  // tslint:disable-next-line\n  add = this.addComponent\n\n  removeComponent = (type: keyof C) => {\n    if (this.hasComponent(type)) {\n      const component = this.components[type]!\n\n      delete this.components[type]\n\n      component.onDetach(this)\n\n      this.onChangeListeners.forEach(listener =>\n        listener({ type: 'remove', entity: this, component })\n      )\n    }\n  }\n\n  // tslint:disable-next-line\n  remove = this.removeComponent\n\n  toggleComponent(\n    componentClass: new (value: void) => ValueOf<C>,\n    predicate: boolean\n  ) {\n    const componentType = getComponentTypeFromClass(componentClass)\n\n    if (predicate) {\n      if (!this.hasComponent(componentType)) {\n        this.addComponent(new componentClass())\n      }\n    } else {\n      this.removeComponent(componentType)\n    }\n  }\n\n  // tslint:disable-next-line\n  toggle = this.toggleComponent\n\n  // Get component instance\n  getComponent<T extends keyof C>(type: T): C[T] | undefined {\n    return this.components[type]\n  }\n\n  getComponentValue<T extends keyof C>(type: T): C[T]['value'] {\n    if (this.hasComponent(type)) {\n      return this.components[type]!.value\n    } else {\n      throw new Error(`Entity does not contain component of type ${type}.`)\n    }\n  }\n\n  // tslint:disable-next-line\n  get = this.getComponentValue\n\n  setComponentValue<T extends keyof C>(\n    type: T,\n    value: Partial<C[T]['value']> | C[T]['value']\n  ) {\n    if (this.hasComponent(type)) {\n      if (typeof value === 'object' && !Array.isArray(value)) {\n        Object.assign(this.components[type]!.value, value)\n      } else {\n        this.components[type]!.value = value\n      }\n    } else {\n      throw new Error(`Entity does not contain component of type ${type}.`)\n    }\n  }\n\n  // tslint:disable-next-line\n  set = this.setComponentValue\n}\n","import { ComponentTypes } from './Component'\nimport Entity from './Entity'\n\ntype ValueOf<T> = T[keyof T]\n\ntype ArchetypeComponentFilter<C extends ComponentTypes> = (\n  ...componentTypes: (keyof C)[]\n) => ArchetypeFilterPredicate<C>\n\ntype ArchetypeFilterPredicate<C extends ComponentTypes> = (\n  entity: Entity<C>\n) => boolean\n\ntype ArchetypeChangeEventTypes = 'add' | 'remove'\n\nexport interface ArchetypeChangeEvent<C extends ComponentTypes> {\n  type: ArchetypeChangeEventTypes\n  archetype: Archetype<C>\n  entity: Entity<C>\n  component: ValueOf<C> | undefined\n}\n\nexport type ArchetypeChangeListener<C extends ComponentTypes> = (\n  ev: ArchetypeChangeEvent<C>\n) => void\n\ninterface ArchetypeComponentFilterPresets<C extends ComponentTypes> {\n  include: ArchetypeComponentFilter<C>\n  exclude: ArchetypeComponentFilter<C>\n  only: ArchetypeComponentFilter<C>\n  any: ArchetypeComponentFilter<C>\n}\n\nexport default abstract class Archetype<C extends ComponentTypes>\n  implements ArchetypeComponentFilterPresets<C> {\n  include = (...componentTypes: (keyof C)[]) => (entity: Entity<C>) =>\n    entity.hasComponents(...componentTypes)\n\n  exclude = (...componentTypes: (keyof C)[]) => (entity: Entity<C>) =>\n    componentTypes.every(type => !entity.hasComponent(type))\n\n  only = (...componentTypes: (keyof C)[]) => (entity: Entity<C>) =>\n    componentTypes.length === entity.componentTypes.length &&\n    entity.hasComponents(...componentTypes)\n\n  any = (...componentTypes: (keyof C)[]) => (entity: Entity<C>) =>\n    componentTypes.some(type => entity.hasComponent(type))\n\n  filters: ArchetypeFilterPredicate<C>[] = []\n\n  readonly entities: Entity<C>[] = []\n\n  private onChangeListeners: Set<ArchetypeChangeListener<C>> = new Set()\n  private onAddListeners: Set<ArchetypeChangeListener<C>> = new Set()\n  private onRemoveListeners: Set<ArchetypeChangeListener<C>> = new Set()\n\n  onChange(listener: ArchetypeChangeListener<C>) {\n    this.onChangeListeners.add(listener)\n    return () => this.onChangeListeners.delete(listener)\n  }\n\n  onAdd(listener: ArchetypeChangeListener<C>) {\n    this.onAddListeners.add(listener)\n    return () => this.onAddListeners.delete(listener)\n  }\n\n  onRemove(listener: ArchetypeChangeListener<C>) {\n    this.onRemoveListeners.add(listener)\n    return () => this.onRemoveListeners.delete(listener)\n  }\n\n  matchesEntity(entity: Entity<C>): boolean {\n    return this.filters.every(filter => filter(entity))\n  }\n\n  hasEntity(entity: Entity<C>): boolean {\n    return this.entities.indexOf(entity) !== -1\n  }\n\n  handleEntityChange(entity: Entity<C>, component?: ValueOf<C>) {\n    if (this.hasEntity(entity)) {\n      // Does this entity need to be removed\n      if (!this.matchesEntity(entity)) {\n        this.handleEntityRemove(entity, component)\n      }\n    } else {\n      // Does this entity need to be added\n      if (this.matchesEntity(entity)) {\n        this.handleEntityAdd(entity, component)\n      }\n    }\n  }\n\n  handleEntityAdd(entity: Entity<C>, component?: ValueOf<C>) {\n    if (this.matchesEntity(entity)) {\n      if (!this.hasEntity(entity)) {\n        const ev: ArchetypeChangeEvent<C> = {\n          type: 'add',\n          archetype: this,\n          entity,\n          component\n        }\n\n        this.entities.push(entity)\n        this.onAddListeners.forEach(listener => listener(ev))\n        this.onChangeListeners.forEach(listener => listener(ev))\n      }\n    }\n  }\n\n  handleEntityRemove(entity: Entity<C>, component?: ValueOf<C>) {\n    if (this.hasEntity(entity)) {\n      const idx = this.entities.indexOf(entity)\n\n      if (idx !== -1) {\n        const ev: ArchetypeChangeEvent<C> = {\n          type: 'remove',\n          archetype: this,\n          entity,\n          component\n        }\n\n        this.entities.splice(idx, 1)\n        this.onRemoveListeners.forEach(listener => listener(ev))\n        this.onChangeListeners.forEach(listener => listener(ev))\n      }\n    }\n  }\n}\n","import Entity from './Entity'\nimport { ComponentTypes } from './Component'\n\ntype ValueOf<T> = T[keyof T]\n\nexport default class EntityPool<C extends ComponentTypes> {\n  head: number = -1\n  entities: Entity<C>[]\n\n  constructor(public size: number) {\n    this.entities = new Array(size)\n\n    for (let idx = 0; idx < size; idx++) {\n      this.entities[++this.head] = new Entity<C>()\n    }\n  }\n\n  get length(): number {\n    return this.size - this.head - 1\n  }\n\n  // Take an Entity from the pool\n  renew(components: ValueOf<C>[] = []): Entity<C> {\n    if (this.head >= 0) {\n      const entity = this.entities[this.head--]\n      return entity.renew(components)\n    } else {\n      throw new Error(\n        'EntityPool: Attempted to take an Entity from an exhausted pool.'\n      )\n    }\n  }\n\n  // Release an Entity back into the pool\n  release(entity: Entity<C>) {\n    if (entity instanceof Entity) {\n      if (this.head < this.size - 1) {\n        this.entities[++this.head] = entity.reset()\n      } else {\n        throw new Error(\n          'EntityPool: Attempted to release an Entity back into a full pool.'\n        )\n      }\n    } else {\n      throw new Error('EntityPool: Released object was not an Entity.')\n    }\n  }\n}\n","import { ComponentTypes } from './Component'\nimport Archetype from './Archetype'\nimport Entity from './Entity'\nimport EntityPool from './EntityPool'\n\ntype ValueOf<T> = T[keyof T]\n\ninterface EntityManagerOptions {\n  poolSize: number\n}\n\nexport default class EntityManager<C extends ComponentTypes> {\n  entities: Map<number, Entity<C>> = new Map()\n  archetypes: Map<string, Archetype<C>> = new Map()\n  entityPool: EntityPool<C>\n  entityChangeDisposers: Map<number, () => void> = new Map()\n\n  constructor({ poolSize }: EntityManagerOptions = { poolSize: 1000 }) {\n    this.entityPool = new EntityPool<C>(poolSize)\n  }\n\n  filter(types: string[]): Entity<C>[] {\n    return Array.from(this.entities.values()).filter(entity =>\n      entity.hasComponents(...types)\n    )\n  }\n\n  addEntity(entity: Entity<C>) {\n    if (!this.entities.has(entity.id)) {\n      this.entities.set(entity.id, entity)\n\n      // Add entity listener\n      this.entityChangeDisposers.set(\n        entity.id,\n        entity.onChange(ev => {\n          const { type, entity, component } = ev\n          switch (type) {\n            case 'add':\n              this.handleEntityAddComponent(entity, component)\n              break\n\n            case 'remove':\n              this.handleEntityRemoveComponent(entity, component)\n          }\n        })\n      )\n\n      // Add entity to archetypes\n      this.archetypes.forEach(archetype => {\n        archetype.handleEntityAdd(entity)\n      })\n    }\n  }\n\n  removeEntity(entity: Entity<C>) {\n    if (this.entities.has(entity.id)) {\n      this.entities.delete(entity.id)\n\n      // clean up entity listener disposers\n      if (this.entityChangeDisposers.has(entity.id)) {\n        this.entityChangeDisposers.get(entity.id)!()\n        this.entityChangeDisposers.delete(entity.id)\n      }\n\n      // Remove entity from archetypes\n      this.archetypes.forEach(archetype => {\n        archetype.handleEntityRemove(entity)\n      })\n    }\n  }\n\n  hasEntity(entityId: number): boolean {\n    return this.entities.has(entityId)\n  }\n\n  getEntity(entityId: number): Entity<C> | undefined {\n    return this.entities.get(entityId)\n  }\n\n  renewEntity(components: ValueOf<C>[] = []): Entity<C> {\n    const entity = this.entityPool.renew(components)\n    this.addEntity(entity)\n    return entity\n  }\n\n  releaseEntity(entity: Entity<C>) {\n    if (this.hasEntity(entity.id)) {\n      this.removeEntity(entity)\n      this.entityPool.release(entity)\n    }\n  }\n\n  addArchetype<T extends Archetype<C>>(klass: new (...args: any[]) => T) {\n    const type = klass.name\n\n    if (!this.archetypes.has(type)) {\n      const archetype = new klass()\n      this.archetypes.set(type, archetype)\n\n      // Add matching entities to archetypes\n      this.entities.forEach(entity => {\n        archetype.handleEntityAdd(entity)\n      })\n\n      return archetype\n    } else {\n      throw new Error(\n        `EntityManager: Could not add archetype as '${type}' already exists.`\n      )\n    }\n  }\n\n  removeArchetype<T extends Archetype<C>>(\n    klass: new (...args: any[]) => T\n  ): Archetype<C> {\n    const archetype = this.archetypes.get(klass.name)\n    if (archetype) {\n      this.archetypes.delete(klass.name)\n      return archetype\n    } else {\n      throw new Error(\n        `EntityManager: Could not delete archetype as '${klass.name}' does not exists.`\n      )\n    }\n  }\n\n  hasArchetype<T extends Archetype<C>>(\n    klass: new (...args: any[]) => T\n  ): boolean {\n    return this.archetypes.has(klass.name)\n  }\n\n  getArchetype<T extends Archetype<C>>(klass: new (...args: any[]) => T): T {\n    const archetype = this.archetypes.get(klass.name)\n    if (archetype) {\n      return archetype as T\n    } else {\n      throw new Error(\n        `EntityManager: Could not get archetype as '${klass.name}' does not exists.`\n      )\n    }\n  }\n\n  private handleEntityAddComponent(entity: Entity<C>, component: ValueOf<C>) {\n    if (this.hasEntity(entity.id)) {\n      this.archetypes.forEach(archetype => {\n        archetype.handleEntityChange(entity, component)\n      })\n    }\n  }\n\n  private handleEntityRemoveComponent(\n    entity: Entity<C>,\n    component: ValueOf<C>\n  ) {\n    if (this.hasEntity(entity.id)) {\n      this.archetypes.forEach(archetype => {\n        archetype.handleEntityChange(entity, component)\n      })\n    }\n  }\n}\n","import EntityManager from './EntityManager'\nimport { ComponentTypes } from './Component'\n\ninterface SystemOptions {\n  priority: number\n  enabled: boolean\n}\n\nexport default abstract class System<C extends ComponentTypes> {\n  enabled: boolean = true\n\n  constructor(options: Partial<SystemOptions> = {}) {\n    Object.assign(this, options)\n  }\n\n  init(_: EntityManager<C>): void {\n    // stub\n  }\n\n  abstract update(manager: EntityManager<C>, dt: number, time: number): void\n\n  enable() {\n    this.enabled = true\n  }\n\n  disable() {\n    this.enabled = false\n  }\n}\n","import Archetype from './Archetype'\nimport { ComponentTypes } from './Component'\nimport Entity from './Entity'\nimport EntityManager from './EntityManager'\nimport System from './System'\n\ntype ValueOf<T> = T[keyof T]\n\n/*\n\nWorld registers systems, archetypes and entities. Updates systems.\n\n*/\n\ninterface WorldOptions {\n  poolSize: number\n}\n\nexport default class World<C extends ComponentTypes> {\n  manager: EntityManager<C> = new EntityManager<C>()\n\n  private systems: Map<string, System<C>> = new Map()\n\n  constructor({ poolSize }: WorldOptions = { poolSize: 1000 }) {\n    this.manager = new EntityManager<C>({ poolSize })\n  }\n\n  get systemTypes(): string[] {\n    return Array.from(this.systems.keys())\n  }\n\n  addSystem(system: System<C>) {\n    const type = system.constructor.name\n    if (!this.systems.has(type)) {\n      this.systems.set(type, system)\n      system.init(this.manager)\n    } else {\n      throw new Error(\n        `World: Could not add system as '${type}' already exists.`\n      )\n    }\n  }\n\n  addSystems(...systems: System<C>[]) {\n    systems.forEach(system => this.addSystem(system))\n  }\n\n  removeSystem<T extends System<C>>(\n    klass: new (...args: any[]) => T\n  ): System<C> {\n    const system = this.systems.get(klass.name)\n    if (system) {\n      this.systems.delete(klass.name)\n      return system\n    } else {\n      throw new Error(\n        `World: Could not delete system as '${klass.name}' does not exists.`\n      )\n    }\n  }\n\n  hasSystem<T extends System<C>>(klass: new (...args: any[]) => T): boolean {\n    return this.systems.has(klass.name)\n  }\n\n  getSystem<T extends System<C>>(klass: new (...args: any[]) => T): T {\n    const system = this.systems.get(klass.name)\n    if (system) {\n      return system as T\n    } else {\n      throw new Error(\n        `World: Could not get system as '${klass.name}' does not exists.`\n      )\n    }\n  }\n\n  addArchetype<T extends Archetype<C>>(klass: new (...args: any[]) => T) {\n    return this.manager.addArchetype(klass)\n  }\n\n  removeArchetype<T extends Archetype<C>>(klass: new (...args: any[]) => T) {\n    return this.manager.removeArchetype(klass)\n  }\n\n  hasArchetype<T extends Archetype<C>>(\n    klass: new (...args: any[]) => T\n  ): boolean {\n    return this.manager.hasArchetype(klass)\n  }\n\n  getArchetype<T extends Archetype<C>>(klass: new (...args: any[]) => T): T {\n    return this.manager.getArchetype(klass)\n  }\n\n  createEntity(components: ValueOf<C>[] = []): Entity<C> {\n    return this.manager.renewEntity(components)\n  }\n\n  removeEntity(entityId: number) {\n    const entity = this.getEntity(entityId)\n\n    if (entity) {\n      this.manager.releaseEntity(entity)\n    }\n  }\n\n  getEntity(entityId: number): Entity<C> | undefined {\n    return this.manager.getEntity(entityId)\n  }\n\n  getEntities(entityIds: number[]): Entity<C>[] {\n    return entityIds.map(this.getEntity.bind(this))\n  }\n\n  update(dt: number, time: number) {\n    this.systems.forEach(system => {\n      if (system.enabled) {\n        system.update(this.manager, dt, time)\n      }\n    })\n  }\n}\n","export { default as Component, ComponentTypes } from './Component'\nexport { default as Entity } from './Entity'\nexport {\n  default as Archetype,\n  ArchetypeChangeEvent,\n  ArchetypeChangeListener\n} from './Archetype'\nexport { default as EntityManager } from './EntityManager'\nexport { default as System } from './System'\nexport { default as World } from './World'\n","let ctx: CanvasRenderingContext2D\n\nexport const createRenderingContext = (canvas: HTMLCanvasElement) => {\n  ctx = canvas.getContext('2d')!\n}\n\nexport const getRenderingContext = () => {\n  return ctx\n}\n","import { Archetype } from '../../../../src/ecs'\nimport { Components } from '../components'\n\ntype BirdComponents = Pick<Components, 'position' | 'velocity' | 'acceleration'>\n\nexport default class BirdsArchetype extends Archetype<BirdComponents> {\n  filters = [\n    this.include('position'),\n    this.include('velocity'),\n    this.include('acceleration')\n  ]\n}\n","export { default as BirdsArchetype } from './BirdsArchetype'\n","import { Component } from '../../../../src/ecs'\nimport { Vector2 } from '../lib/vec2'\n\nexport default class AccelerationComponent extends Component<Vector2> {}\n","import { Component } from '../../../../src/ecs'\nimport { Vector2 } from '../lib/vec2'\n\nexport default class PositionComponent extends Component<Vector2> {}\n","import { Component } from '../../../../src/ecs'\nimport { Vector2 } from '../lib/vec2'\n\nexport default class VelocityComponent extends Component<Vector2> {}\n","import AccelerationComponent from './AccelerationComponent'\nimport PositionComponent from './PositionComponent'\nimport VelocityComponent from './VelocityComponent'\n\nimport { ComponentTypes } from '../../../../src/ecs'\n\nexport type Components = {\n  acceleration: AccelerationComponent\n  position: PositionComponent\n  velocity: VelocityComponent\n}\n\nexport { AccelerationComponent, PositionComponent, VelocityComponent }\n","export interface Vector2 extends Float32Array {\n  readonly length: 2\n}\n\n/**\n * Creates a new, empty Vector2\n *\n * @returns {Vector2} a new 2D vector\n */\nexport function create(): Vector2 {\n  return new Float32Array(2) as Vector2\n}\n\n/**\n * Creates a new Vector2 initialized with values from an existing vector\n *\n * @param {Vector2} a vector to clone\n * @returns {Vector2} a new 2D vector\n */\nexport const clone = (a: Vector2): Vector2 => {\n  const out = create()\n  out[0] = a[0]\n  out[1] = a[1]\n  return out\n}\n\n/**\n * Creates a new Vector2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {Vector2} a new 2D vector\n */\nexport const fromValues = (x: number, y: number): Vector2 => {\n  const out = create()\n  out[0] = x\n  out[1] = y\n  return out\n}\n\n/**\n * Set the components of a Vector2 to the given values\n *\n * @param {Vector2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {Vector2} out\n */\nexport const set = (out: Vector2, x: number, y: number): Vector2 => {\n  out[0] = x\n  out[1] = y\n  return out\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {Vector2} out the receiving vector\n * @param {Vector2} a the first operand\n * @param {Vector2} b the second operand\n * @returns {Vector2} out\n */\nexport const sub = (out: Vector2, a: Vector2, b: Vector2): Vector2 => {\n  out[0] = a[0] - b[0]\n  out[1] = a[1] - b[1]\n  return out\n}\n\n/**\n * Adds two Vector2's\n *\n * @param {Vector2} out the receiving vector\n * @param {Vector2} a the first operand\n * @param {Vector2} b the second operand\n * @returns {Vector2} out\n */\nexport const add = (out: Vector2, a: Vector2, b: Vector2) => {\n  out[0] = a[0] + b[0]\n  out[1] = a[1] + b[1]\n  return out\n}\n\n/**\n * Calculates the euclidian distance between two Vector2's\n *\n * @param {Vector2} a the first operand\n * @param {Vector2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport const distance = (a: Vector2, b: Vector2): number => {\n  const x = b[0] - a[0]\n  const y = b[1] - a[1]\n  return Math.sqrt(x * x + y * y)\n}\n\n/**\n * Normalize a Vector2\n *\n * @param {Vector2} out the receiving vector\n * @param {Vector2} a vector to normalize\n * @returns {Vector2} out\n */\nexport const normalize = (out: Vector2, a: Vector2): Vector2 => {\n  const x = a[0]\n  const y = a[1]\n  let len = x * x + y * y\n  if (len > 0) {\n    len = 1 / Math.sqrt(len)\n    out[0] = x * len\n    out[1] = y * len\n  }\n  return out\n}\n\n/**\n * Scales a Vector2 by a scalar number\n *\n * @param {Vector2} out the receiving vector\n * @param {Vector2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {Vector2} out\n */\nexport const scale = (out: Vector2, a: Vector2, b: number): Vector2 => {\n  out[0] = a[0] * b\n  out[1] = a[1] * b\n  return out\n}\n\n/**\n * Calculates the length of a Vector2\n *\n * @param {Vector2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = (a: Vector2): number => {\n  const x = a[0]\n  const y = a[1]\n  return Math.sqrt(x * x + y * y)\n}\n","import {\n  PositionComponent,\n  VelocityComponent,\n  AccelerationComponent\n} from '../components'\nimport * as vec2 from '../lib/vec2'\n\nconst MAX_SPEED = Number(process.env.MAX_SPEED)\n\nconst BirdAssemblage = (x: number, y: number) => {\n  return [\n    new PositionComponent(vec2.fromValues(x, y)),\n    new VelocityComponent(\n      vec2.fromValues(\n        Math.random() * MAX_SPEED - 1,\n        Math.random() * MAX_SPEED - 1\n      )\n    ),\n    new AccelerationComponent(vec2.fromValues(0, 0))\n  ]\n}\n\nexport default BirdAssemblage\n","import { System, EntityManager, Entity } from '../../../../src/ecs'\nimport { Components } from '../components'\nimport * as vec2 from '../lib/vec2'\nimport { Vector2 } from '../lib/vec2'\nimport { BirdsArchetype } from '../archetypes'\n\nconst MAX_SPEED = Number(process.env.MAX_SPEED)\nconst MAX_FORCE = Number(process.env.MAX_FORCE)\nconst NEIGHBOR_DISTANCE = Number(process.env.NEIGHBOR_DISTANCE)\nconst DESIRED_SEPARATION = Number(process.env.DESIRED_SEPARATION)\nconst RADIUS = Number(process.env.RADIUS)\n\n// Predefine vectors for scratch work within loop\nconst separation: Vector2 = vec2.create()\nconst alignment: Vector2 = vec2.create()\nconst cohesion: Vector2 = vec2.create()\nconst diff: Vector2 = vec2.create()\nconst steer: Vector2 = vec2.create()\nconst desired: Vector2 = vec2.create()\n\nexport default class FlockingSystem extends System<Components> {\n  update(manager: EntityManager<Components>, dt: number) {\n    const { entities } = manager.getArchetype(BirdsArchetype)\n    const { innerWidth: width, innerHeight: height } = window\n    const len = entities.length\n    for (let i = 0; i < len; i++) {\n      const bird = entities[i]\n      const loc = bird.components.position!.value\n      const vel = bird.components.velocity!.value\n      const acc = bird.components.acceleration!.value\n\n      vec2.set(separation, 0, 0)\n      vec2.set(alignment, 0, 0)\n      vec2.set(cohesion, 0, 0)\n\n      let separationCount = 0\n      let alignmentCount = 0\n\n      for (let j = 0; j < len; j++) {\n        const other = entities[j]\n        const otherLoc = other.components.position!.value\n        const otherVel = other.components.velocity!.value\n        const d = vec2.distance(loc, otherLoc)\n\n        if (d > 0) {\n          if (d < DESIRED_SEPARATION) {\n            vec2.sub(diff, loc, otherLoc)\n            vec2.normalize(diff, diff)\n            vec2.scale(diff, diff, 1 / d)\n            vec2.add(separation, separation, diff)\n            separationCount++\n          }\n\n          if (d < NEIGHBOR_DISTANCE) {\n            vec2.add(alignment, alignment, otherVel)\n            vec2.add(cohesion, cohesion, otherLoc)\n            alignmentCount++\n          }\n        }\n      }\n\n      if (separationCount > 0) {\n        vec2.scale(separation, separation, 1 / separationCount)\n        vec2.scale(separation, separation, 2) // weight separation\n        vec2.add(acc, acc, separation)\n      }\n\n      if (alignmentCount > 0) {\n        vec2.scale(alignment, alignment, 1 / alignmentCount)\n        limit(alignment, alignment, MAX_FORCE)\n        vec2.scale(cohesion, cohesion, 1 / alignmentCount)\n\n        this.steer(bird, cohesion)\n\n        vec2.add(acc, acc, alignment)\n        vec2.add(acc, acc, cohesion)\n      }\n\n      // Update velocity\n      vec2.add(vel, vel, acc)\n\n      // Limit speed\n      limit(vel, vel, MAX_SPEED)\n      vec2.add(loc, loc, vel)\n\n      // Reset acceleration to zero\n      vec2.set(acc, 0, 0)\n\n      // Overflow borders\n      if (loc[0] < -RADIUS) {\n        loc[0] = width + RADIUS\n      }\n      if (loc[1] < -RADIUS) {\n        loc[1] = height + RADIUS\n      }\n      if (loc[0] > width + RADIUS) {\n        loc[0] = -RADIUS\n      }\n      if (loc[1] > height + RADIUS) {\n        loc[1] = -RADIUS\n      }\n    }\n  }\n\n  steer(entity: Entity<Components>, target: Vector2) {\n    const loc = entity.components.position!.value\n    const vel = entity.components.velocity!.value\n\n    vec2.set(steer, 0, 0)\n    vec2.sub(desired, target, loc)\n\n    const d = vec2.length(desired)\n\n    if (d > 0) {\n      vec2.normalize(desired, desired)\n      vec2.scale(desired, desired, MAX_SPEED)\n      vec2.sub(steer, desired, vel)\n      limit(steer, steer, MAX_FORCE)\n    }\n\n    vec2.set(target, steer[0], steer[1])\n  }\n\n  borders(entity: Entity<Components>) {\n    const loc = entity.components.position!.value\n    const { innerWidth: width, innerHeight: height } = window\n\n    if (loc[0] < -RADIUS) {\n      loc[0] = width + RADIUS\n    }\n    if (loc[1] < -RADIUS) {\n      loc[1] = height + RADIUS\n    }\n    if (loc[0] > width + RADIUS) {\n      loc[0] = -RADIUS\n    }\n    if (loc[1] > height + RADIUS) {\n      loc[1] = -RADIUS\n    }\n  }\n}\n\nconst limit = (out: Vector2, a: Vector2, b: number) => {\n  const length = vec2.length(a)\n  if (length > b) {\n    const lim = (1 / length) * b\n    out[0] = a[0] * lim\n    out[1] = a[1] * lim\n  } else {\n    out[0] = a[0]\n    out[1] = a[1]\n  }\n  return out\n}\n","import { System, Entity, EntityManager } from '../../../../src/ecs'\nimport { Components } from '../components'\nimport { BirdsArchetype } from '../archetypes'\nimport { Vector2 } from '../lib/vec2'\nimport { getRenderingContext } from '../RenderingContext'\n\nconst HALF_PI = Math.PI / 2\nconst RADIUS = Number(process.env.RADIUS)\n\nexport default class RenderSystem extends System<Components> {\n  update(manager: EntityManager<Components>, dt: number) {\n    const ctx = getRenderingContext()\n    const { entities } = manager.getArchetype(BirdsArchetype)\n\n    // Clear screen\n    ctx.fillStyle = 'rgba(240, 240, 240, 0.1)'\n    ctx.fillRect(0, 0, window.innerWidth, window.innerHeight)\n\n    // Render entities\n    entities.forEach(bird => this.render(ctx, bird))\n  }\n\n  render = (ctx: CanvasRenderingContext2D, entity: Entity<Components>) => {\n    const loc = entity.components.position!.value\n    const vel = entity.components.velocity!.value\n    const theta = heading2D(vel) + HALF_PI\n\n    ctx.save()\n    ctx.translate(loc[0], loc[1])\n    ctx.rotate(theta)\n\n    ctx.beginPath()\n    ctx.moveTo(0, RADIUS)\n    ctx.lineTo(0, 0)\n    ctx.stroke()\n    ctx.closePath()\n\n    ctx.restore()\n  }\n}\n\nconst heading2D = (a: Vector2): number => {\n  return -Math.atan2(-a[1], a[0])\n}\n","import Stats from 'stats.js'\nimport { World } from '../../../src/ecs'\nimport { createRenderingContext } from './RenderingContext'\n\nimport { Components } from './components'\nimport { BirdsArchetype } from './archetypes'\nimport BirdAssemblage from './assemblages/BirdAssemblage'\nimport FlockingSystem from './systems/FlockingSystem'\nimport RenderSystem from './systems/RenderSystem'\n\nconst FLOCK_SIZE = Number(process.env.FLOCK_SIZE)\n\nconst stats = new Stats()\n\nconst world = new World<Components>()\n\n// Archetypes\nworld.addArchetype(BirdsArchetype)\n\n// Systems\nworld.addSystems(new FlockingSystem(), new RenderSystem())\n\nconst init = () => {\n  // Add Stats\n  document.body.appendChild(stats.dom)\n\n  const canvas = document.getElementById('flocking')! as HTMLCanvasElement\n\n  createRenderingContext(canvas)\n\n  canvas.width = window.innerWidth\n  canvas.height = window.innerHeight\n\n  for (let i = 0; i < FLOCK_SIZE; i++) {\n    world.createEntity(\n      BirdAssemblage(window.innerWidth / 2, window.innerHeight / 2)\n    )\n  }\n\n  // Start loop\n  requestAnimationFrame(loop)\n}\n\nlet frame = 0\n\nconst loop = () => {\n  stats.begin()\n\n  world.update(0, frame++)\n\n  stats.end()\n\n  requestAnimationFrame(loop)\n}\n\ndocument.addEventListener('DOMContentLoaded', init, false)\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}